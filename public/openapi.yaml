openapi: 3.0.0
info:
  title: パンフレットアプリケーションAPI
  description: 位置情報付きマップを作成・編集するためのAPI
  version: 1.0.0
servers:
  - url: https://api.pamfree.com/api
    description: APIベースパス

tags:
  - name: Auth
    description: 認証関連のAPI
  - name: Map
    description: マップ関連のAPI
  - name: Floor
    description: フロア関連のAPI
  - name: Pin
    description: ピン関連のAPI
  - name: PublicEdit
    description: 公開編集関連のAPI
  - name: Viewer
    description: ビューワー関連のAPI
  - name: Media
    description: メディア関連のAPI
  - name: Account
    description: アカウント管理のAPI
  - name: Admin
    description: 管理者機能のAPI

paths:
  /health:
    get:
      summary: ヘルスチェック
      responses:
        '200':
          description: システムが正常に動作している
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok

  # 認証関連のAPI
  /auth/register:
    post:
      tags:
        - Auth
      summary: ユーザー登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: ユーザーが正常に登録された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/UserResponse'

  /auth/login:
    post:
      tags:
        - Auth
      summary: ログイン
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/UserResponse'

  /auth/me:
    get:
      tags:
        - Auth
      summary: 現在のユーザー情報を取得
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ユーザー情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/UserResponse'

  # マップ関連のAPI
  /maps:
    get:
      tags:
        - Map
      summary: ユーザーのマップ一覧を取得
      security:
        - bearerAuth: []
      responses:
        '200':
          description: マップの一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Map'

    post:
      tags:
        - Map
      summary: 新しいマップを作成
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapCreate'
      responses:
        '201':
          description: 作成されたマップ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'

  /maps/{mapId}:
    get:
      tags:
        - Map
      summary: マップの詳細を取得
      security:
        - bearerAuth: []
      parameters:
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: マップの詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'

    patch:
      tags:
        - Map
      summary: マップ情報を更新
      security:
        - bearerAuth: []
      parameters:
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MapUpdate'
      responses:
        '200':
          description: 更新されたマップ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map'

    delete:
      tags:
        - Map
      summary: マップを削除
      security:
        - bearerAuth: []
      parameters:
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: マップが削除された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # フロア関連のAPI
  /maps/{mapId}/floors:
    get:
      tags:
        - Floor
      summary: マップに属するフロア一覧を取得
      parameters:
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: フロア一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Floor'

    post:
      tags:
        - Floor
      summary: 新しいフロアを作成
      security:
        - bearerAuth: []
      parameters:
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloorCreate'
      responses:
        '201':
          description: 作成されたフロア
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'
  
  /floors/{floorId}:
    get:
      tags:
        - Floor
      summary: フロアの詳細を取得
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: フロアの詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'

    patch:
      tags:
        - Floor
      summary: フロア情報を更新
      security:
        - bearerAuth: []
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloorUpdate'
      responses:
        '200':
          description: 更新されたフロア
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'

    delete:
      tags:
        - Floor
      summary: フロアを削除
      security:
        - bearerAuth: []
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: フロアが削除された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string

  /floors/{floorId}/image:
    post:
      tags:
        - Floor
      summary: フロアの画像を更新
      security:
        - bearerAuth: []
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image_url:
                  type: string
                  format: uri
              required:
                - image_url
      responses:
        '200':
          description: 更新されたフロア
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor'

  # ピン関連のAPI
  /floors/{floorId}/pins:
    get:
      tags:
        - Pin
      summary: フロアに属するピン一覧を取得
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ピン一覧
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pin'

    post:
      tags:
        - Pin
      summary: 新しいピンを作成
      security:
        - bearerAuth: []
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinCreate'
      responses:
        '201':
          description: 作成されたピン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'

  /pins/{pinId}:
    get:
      tags:
        - Pin
      summary: ピンの詳細を取得
      parameters:
        - name: pinId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ピンの詳細
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'

    patch:
      tags:
        - Pin
      summary: ピン情報を更新
      security:
        - bearerAuth: []
      parameters:
        - name: pinId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinUpdate'
      responses:
        '200':
          description: 更新されたピン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'

    delete:
      tags:
        - Pin
      summary: ピンを削除
      security:
        - bearerAuth: []
      parameters:
        - name: pinId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ピンが削除された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string

  /pins/{pinId}/image:
    post:
      tags:
        - Pin
      summary: ピンの画像を更新
      security:
        - bearerAuth: []
      parameters:
        - name: pinId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image_url:
                  type: string
                  format: uri
              required:
                - image_url
      responses:
        '200':
          description: 更新されたピン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'
  
  # 公開編集関連のAPI
  /public-edit/register:
    post:
      tags:
        - PublicEdit
      summary: 公開編集者を登録
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicEditorRegister'
      responses:
        '201':
          description: 登録された公開編集者
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicEditorResponse'

  /public-edit/verify:
    post:
      tags:
        - PublicEdit
      summary: 公開編集者トークンを検証
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicEditorVerify'
      responses:
        '200':
          description: 検証された公開編集者
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicEditorResponse'

  /public-edit/pins:
    post:
      tags:
        - PublicEdit
      summary: 公開編集でピンを作成
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinCreate'
      responses:
        '201':
          description: 作成されたピン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'

  /public-edit/pins/{pinId}:
    patch:
      tags:
        - PublicEdit
      summary: 公開編集でピンを更新
      parameters:
        - name: pinId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                editorId:
                  type: string
              required:
                - title
                - editorId
      responses:
        '200':
          description: 更新されたピン
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'

    delete:
      tags:
        - PublicEdit
      summary: 公開編集でピンを削除
      parameters:
        - name: pinId
          in: path
          required: true
          schema:
            type: string
        - name: editorId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ピンが削除された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string

  # ビューワー関連のAPI
  /viewer/{mapId}:
    get:
      tags:
        - Viewer
      summary: マップの全データを取得
      parameters:
        - name: mapId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: マップの全データ
          content:
            application/json:
              schema:
                type: object
                properties:
                  map:
                    $ref: '#/components/schemas/Map'
                  floors:
                    type: array
                    items:
                      $ref: '#/components/schemas/Floor'
                  pins:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pin'

  # メディア関連のAPI
  /cloudinary/upload:
    post:
      tags:
        - Media
      summary: 画像をCloudinaryにアップロード
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                folder:
                  type: string
              required:
                - image
      responses:
        '200':
          description: アップロードされた画像の情報
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
                  public_id:
                    type: string
                  format:
                    type: string
                  width:
                    type: integer
                  height:
                    type: integer
                  bytes:
                    type: integer
                  created_at:
                    type: string
                    format: date-time

  /cloudinary/delete:
    post:
      tags:
        - Media
      summary: Cloudinaryから画像を削除
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                publicId:
                  type: string
              required:
                - publicId
      responses:
        '200':
          description: 画像が削除された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # アカウント管理のAPI
  /account/update-profile:
    patch:
      tags:
        - Account
      summary: ユーザープロフィールを更新
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '200':
          description: 更新されたプロフィール
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/UserResponse'

  /account/change-password:
    post:
      tags:
        - Account
      summary: パスワードを変更
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
              required:
                - currentPassword
                - newPassword
      responses:
        '200':
          description: パスワードが変更された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # 管理者機能のAPI
  /admin/users:
    get:
      tags:
        - Admin
      summary: 全ユーザーリストを取得
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ユーザーリスト
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'

  /admin/users/{userId}:
    patch:
      tags:
        - Admin
      summary: ユーザーロールを更新
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: [admin, user]
              required:
                - role
      responses:
        '200':
          description: 更新されたユーザー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

    delete:
      tags:
        - Admin
      summary: ユーザーを削除
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ユーザーが削除された
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserRegister:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
        name:
          type: string
      required:
        - email
        - password
        - name

    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 6
      required:
        - email
        - password

    UserResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [admin, user]
        created_at:
          type: string
          format: date-time

    Map:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        user_id:
          type: string
        is_publicly_editable:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    MapCreate:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        is_publicly_editable:
          type: boolean
          default: false
      required:
        - id
        - title

    MapUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        is_publicly_editable:
          type: boolean

    Floor:
      type: object
      properties:
        id:
          type: string
        map_id:
          type: string
        floor_number:
          type: integer
        name:
          type: string
        image_url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    FloorCreate:
      type: object
      properties:
        mapId:
          type: string
        floor_number:
          type: integer
        name:
          type: string
      required:
        - mapId
        - floor_number
        - name

    FloorUpdate:
      type: object
      properties:
        name:
          type: string
        image_url:
          type: string
          format: uri

    Pin:
      type: object
      properties:
        id:
          type: string
        floor_id:
          type: string
        title:
          type: string
        description:
          type: string
        x_position:
          type: number
          format: float
        y_position:
          type: number
          format: float
        image_url:
          type: string
          format: uri
        editor_id:
          type: string
        editor_nickname:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    PinCreate:
      type: object
      properties:
        floor_id:
          type: string
        title:
          type: string
        description:
          type: string
        x_position:
          type: number
          format: float
        y_position:
          type: number
          format: float
        image_url:
          type: string
          format: uri
        editor_id:
          type: string
        editor_nickname:
          type: string
      required:
        - floor_id
        - title
        - x_position
        - y_position

    PinUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        image_url:
          type: string
          format: uri

    PublicEditorRegister:
      type: object
      properties:
        mapId:
          type: string
        nickname:
          type: string
      required:
        - mapId
        - nickname

    PublicEditorVerify:
      type: object
      properties:
        editorId:
          type: string
        token:
          type: string
      required:
        - editorId
        - token

    PublicEditorResponse:
      type: object
      properties:
        editorId:
          type: string
        nickname:
          type: string
        token:
          type: string
        mapId:
          type: string
        verified:
          type: boolean
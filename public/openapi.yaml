openapi: 3.0.0
info:
  title: SketchShifter API
  description: SketchShifterアプリケーションのREST API
  version: 1.0.0
servers:
  - url: https://api.serendicode-sub.click
    description: 本番環境API

tags:
  - name: 認証
    description: ユーザー認証に関するエンドポイント
  - name: ユーザー管理
    description: ユーザープロフィール管理に関するエンドポイント
  - name: 作品管理
    description: 作品の投稿、取得、更新、削除に関するエンドポイント
  - name: いいね管理
    description: 作品へのいいね操作に関するエンドポイント
  - name: コメント管理
    description: 作品へのコメント操作に関するエンドポイント
  - name: タグ管理
    description: タグ一覧取得に関するエンドポイント
  - name: システム
    description: システム状態確認に関するエンドポイント

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        nickname:
          type: string
        bio:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Tag:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time

    Work:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        file_type:
          type: string
        file_name:
          type: string
        file_url:
          type: string
        thumbnail_type:
          type: string
        thumbnail_url:
          type: string
        code_shared:
          type: boolean
        code_content:
          type: string
        views:
          type: integer
        user_id:
          type: integer
        is_guest:
          type: boolean
        guest_nickname:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        likes_count:
          type: integer
        comments_count:
          type: integer

    ProcessingWork:
      type: object
      properties:
        id:
          type: integer
        work_id:
          type: integer
        original_name:
          type: string
        pde_content:
          type: string
        js_content:
          type: string
        canvas_id:
          type: string
        status:
          type: string
          enum: [pending, processing, processed, error]
        error_message:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        work_id:
          type: integer
        user_id:
          type: integer
        is_guest:
          type: boolean
        guest_nickname:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'

    Like:
      type: object
      properties:
        user_id:
          type: integer
        work_id:
          type: integer
        created_at:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        error:
          type: string
          
    HealthStatus:
      type: object
      properties:
        status:
          type: string
        uptime:
          type: string
        timestamp:
          type: string
        version:
          type: string

paths:
  # システム
  /health:
    get:
      tags:
        - システム
      summary: ヘルスチェック
      description: APIの稼働状態を確認します
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  # 認証
  /register:
    post:
      tags:
        - 認証
      summary: ユーザー登録
      description: 新しいユーザーを登録します
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
                - nickname
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                name:
                  type: string
                nickname:
                  type: string
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: メールアドレスが既に使用されています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      tags:
        - 認証
      summary: ログイン
      description: 既存ユーザーとしてログインします
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: ログイン成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
        '401':
          description: 認証失敗
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # ユーザー管理
  /users/me:
    get:
      tags:
        - ユーザー管理
      summary: 自分のプロフィール取得
      description: ログインユーザーの情報を取得します
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    get:
      tags:
        - ユーザー管理
      summary: ユーザー情報取得
      description: 指定されたIDのユーザー情報を取得します
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/my-works:
    get:
      tags:
        - ユーザー管理
        - 作品管理
      summary: 自分の作品一覧取得
      description: ログインユーザーの作品一覧を取得します
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  works:
                    type: array
                    items:
                      $ref: '#/components/schemas/Work'
                  total:
                    type: integer
                  pages:
                    type: integer
                  page:
                    type: integer
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}/works:
    get:
      tags:
        - ユーザー管理
        - 作品管理
      summary: ユーザーの作品一覧取得
      description: 指定されたユーザーの作品一覧を取得します
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  works:
                    type: array
                    items:
                      $ref: '#/components/schemas/Work'
                  total:
                    type: integer
                  pages:
                    type: integer
                  page:
                    type: integer
        '404':
          description: ユーザーが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # 作品管理
  /works:
    get:
      tags:
        - 作品管理
      summary: 作品一覧取得
      description: 作品一覧を検索条件に基づいて取得します
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: search
          in: query
          schema:
            type: string
        - name: tag
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            type: string
            enum: [newest, popular, likes]
            default: newest
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  works:
                    type: array
                    items:
                      $ref: '#/components/schemas/Work'
                  total:
                    type: integer
                  pages:
                    type: integer
                  page:
                    type: integer

    post:
      tags:
        - 作品管理
      summary: 作品投稿
      description: 新しい作品を投稿します
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                description:
                  type: string
                file:
                  type: string
                  format: binary
                file_url:
                  type: string
                file_public_id:
                  type: string
                file_type:
                  type: string
                file_name:
                  type: string
                thumbnail:
                  type: string
                  format: binary
                thumbnail_url:
                  type: string
                thumbnail_public_id:
                  type: string
                thumbnail_type:
                  type: string
                code_shared:
                  type: boolean
                code_content:
                  type: string
                tags:
                  type: string
                is_guest:
                  type: boolean
                guest_nickname:
                  type: string
      responses:
        '201':
          description: 投稿成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  work:
                    $ref: '#/components/schemas/Work'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}:
    get:
      tags:
        - 作品管理
      summary: 作品詳細取得
      description: 指定されたIDの作品詳細を取得します
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  work:
                    $ref: '#/components/schemas/Work'
                  processing_work:
                    $ref: '#/components/schemas/ProcessingWork'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - 作品管理
      summary: 作品更新
      description: 指定されたIDの作品を更新します
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                file:
                  type: string
                  format: binary
                file_url:
                  type: string
                file_public_id:
                  type: string
                file_type:
                  type: string
                file_name:
                  type: string
                thumbnail_url:
                  type: string
                thumbnail_public_id:
                  type: string
                thumbnail_type:
                  type: string
                code_shared:
                  type: boolean
                code_content:
                  type: string
                tags:
                  type: string
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  work:
                    $ref: '#/components/schemas/Work'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: この作品を更新する権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - 作品管理
      summary: 作品削除
      description: 指定されたIDの作品を削除します
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: この作品を削除する権限がありません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}/file:
    get:
      tags:
        - 作品管理
      summary: 作品ファイル取得
      description: 指定された作品のファイルデータを取得します
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/octet-stream: {}
        '302':
          description: Cloudinaryへのリダイレクト
        '404':
          description: ファイルが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}/thumbnail:
    get:
      tags:
        - 作品管理
      summary: 作品サムネイル取得
      description: 指定された作品のサムネイルを取得します
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            image/*: {}
        '302':
          description: Cloudinaryへのリダイレクト
        '404':
          description: サムネイルが見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # いいね管理
  /works/{id}/like:
    post:
      tags:
        - いいね管理
      summary: いいね追加
      description: 指定された作品にいいねを追加します
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  likes_count:
                    type: integer
        '400':
          description: 既にいいねしています
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /works/{id}/unlike:
    post:
      tags:
        - いいね管理
      summary: いいね削除
      description: 指定された作品のいいねを削除します
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  likes_count:
                    type: integer
        '400':
          description: いいねしていません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # コメント管理
  /works/{id}/comments:
    get:
      tags:
        - コメント管理
      summary: コメント一覧取得
      description: 指定された作品のコメント一覧を取得します
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
                  total:
                    type: integer
                  pages:
                    type: integer
                  page:
                    type: integer
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - コメント管理
      summary: コメント投稿
      description: 指定された作品にコメントを投稿します
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                is_guest:
                  type: boolean
                guest_nickname:
                  type: string
      responses:
        '201':
          description: 投稿成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    $ref: '#/components/schemas/Comment'
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: 認証が必要です
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: 作品が見つかりません
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # タグ管理
  /tags:
    get:
      tags:
        - タグ管理
      summary: タグ一覧取得
      description: タグ一覧を検索条件に基づいて取得します
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'